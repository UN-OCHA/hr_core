<?php
/**
 * @file
 * Code for the Core feature.
 */

include_once 'hr_core.features.inc';

/**
 * Implements hook_entity_info_alter()
 */
function hr_core_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['search_result'] = array(
    'label' => t('Search result'),
    'custom settings' => TRUE,
  );
  $entity_info['fieldable_panels_pane']['view modes']['teaser'] = array(
    'label' => t('Teaser'),
    'custom settings' => TRUE,
  );
  $entity_info['fieldable_panels_pane']['view modes']['link'] = array(
    'label' => t('Link'),
    'custom settings' => TRUE,
  );
}

/**
 * Implements hook_form_alter()
 * Hides fields if they are empty
 */
function hr_core_form_alter(&$form, &$form_state, $form_id) {
  foreach ($form as $id => &$item) {
    if (is_array($item) && isset($item['#type']) && $item['#type'] == 'container') {
      switch($item['#type']) {
        case 'container':
          $language = $item['#language'];
          if (isset($item[$language]['#type']) && $item[$language]['#type'] == 'select') {
            if (empty(array_diff($item[$language]['#options'], array('_none' => '- None -')))) {
              $item['#type'] = 'hidden';
            }
          }
          break;
        case 'select':
          if (empty($item['#options'])) {
            $item['#type'] = 'hidden';
          }
          break;
      }
    }
  }
}

/**
 * Implements hook_pathauto_alias_alter()
 */
function hr_core_pathauto_alias_alter(&$alias, array &$context) {
  $path = _pathauto_existing_alias_data($context['source'], LANGUAGE_NONE);
  if (!empty($path)) {
    // Get initial alias created no matter what
    $alias = $path['alias'];
  }
  // Force all aliases to be saved as language neutral.
  $context['language'] = LANGUAGE_NONE;
}

